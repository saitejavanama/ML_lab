def kernel(point,xmat,k):
    m,n=np.shape(xmat)
    weights=np.mat(np.eye(m))
    for i in range(m):
        diff=point-X[i]
        weights[i,i]=np.exp(diff*diff.T/(-2.0*k**2))
    return weights
def lw(point,xmat,ymat,k):
    wt=kernel(point,xmat,k)
    W=((X.T*(wt*X)).I)*(X.T*(wt*ymat.T))
    return W
def lwr(xmat,ymat,k):
    m,n=np.shape(xmat)
    ypred=np.zeros(m)
    for i in range(m):
        ypred[i]=xmat[i]*lw(xmat[i],xmat,ymat,k)
    return ypred
data=pd.read_csv('10-dataset.csv')
colA=np.array(data.total_bill)
colB=np.array(data.tip)
mcolA=np.mat(colA)
mcolB=np.mat(colB)
m=np.shape(mcolB)[1]
ones=np.ones((1,m),dtype=int)
X=np.hstack((ones.T,mcolA.T))
ypred=lwr(X,mcolB,0.8)
xsort=X.copy()
xsort.sort(axis=0)
plt.scatter(colA,colB,color='blue')
plt.plot(xsort[:,1],ypred[X[:,1].argsort(0)],color='yellow',linewidth=5)
plt.show()
